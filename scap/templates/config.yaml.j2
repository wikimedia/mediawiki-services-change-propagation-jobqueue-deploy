spec: &spec
  x-sub-request-filters:
    - type: default
      name: http
      options:
        allow:
          - pattern: /^https?:\/\//
            forward_headers:
              user-agent: true
  title: The Change Propagation for JobQueue root
  paths:
    /{api:sys}/queue:
      x-modules:
        - path: src/sys/kafka.js
          options:
            metadata_broker_list: <%= broker_list %>
            dc_name: <%= site %>
            consumer:
              # JobQueue jobs might sent messages larget then 1 Meg,
              # so we increase the max message size in kafka and have to
              # ajust the consumers accordingly.
              fetch.message.max.bytes: <%= kafka_max_bytes %>
              # Silence noisy connection reaper logging
              # https://github.com/Blizzard/node-rdkafka/issues/326
              # https://github.com/edenhill/librdkafka/issues/768#issuecomment-246302856
              log.connection.close: false
            producer:
              compression.codec: <%= kafka_compression_codec %>
              # Silence noisy connection reaper logging
              # https://github.com/Blizzard/node-rdkafka/issues/326
              # https://github.com/edenhill/librdkafka/issues/768#issuecomment-246302856
              log.connection.close: false
            concurrency: <%= concurrency %>
            startup_delay: 60000
            disable_blacklist: true
            disable_ratelimit: true
<%- if env == 'beta' %>
            templates:
              job:
                topic: '/^mediawiki\.job\..*/'
                exec:
                  method: post
                  uri: '<%= jobrunner_host %>/rpc/RunSingleJob.php'
                  headers:
                    content-type: 'application/json'
                  body: '{{globals.message}}'
                  agentOptions:
                    keepAlive: true
<%- else %>
            templates: {}
<%- endif %>


# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: ncpu

# Number of workers to start in parallel after the first worker.
# The first worker is always started independently. After it has completed
# its start-up, this number controls the number of workers to start in
# parallel until `num_workers` have been started. Note that setting this
# number to a too high a value might lead to high resource consumption
# (especially of CPU) during the start-up process.
startup_concurrency: 4

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 750

# The maximum interval in ms that can pass between two beat messages
# sent by each worker to the master before it is killed
worker_heartbeat_timeout: 15000

# Logger info
logging:
  level: warn
  name: <%= log_name %>
  streams:
    - level: info
      path: <%= log_file %>
      type: file
    - type: syslog
      host: localhost
      port: <%= rsyslog_port %>
      prefix: '@cee: '
      name: node
  sampled_levels:
    trace/dedupe: 0.001
    # With the average job insertion rate of 1000/s this will give about 1 sample log per minute
    trace/sample: 0.00002

# Statsd metrics reporter
metrics:
  name: <%= metrics_name %>
  host: <%= metrics_host %>
  port: <%= metrics_port %>
  type: statsd

services:
  - name: <%= name %>
    # a relative path or the name of an npm package, if different from name
    module: hyperswitch
    # per-service config
    conf:
      cors: "*"
      port: <%= port %>
      # interface: localhost # uncomment to only listen on localhost
      # URL of the outbound proxy to use (complete with protocol)
      proxy: <%= proxy if proxy else '' %>
      # the list of domains for which not to use the proxy defined above
      # no_proxy_list:
      #   - domain1.com
      #   - domain2.org
      # the list of incoming request headers that can be logged; if left empty,
      # the following headers are allowed: cache-control, content-length,
      # content-type, if-match, user-agent, x-request-id
      # log_header_whitelist:
      #   - cache-control
      #   - content-length
      #   - content-type
      #   - if-match
      #   - user-agent
      #   - x-request-id
      user_agent: ChangePropagation-JobQueue/WMF
      spec: *spec
